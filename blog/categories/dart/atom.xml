<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dart | Скука и рутина это зло]]></title>
  <link href="http://vladimir-vg.github.io/blog/categories/dart/atom.xml" rel="self"/>
  <link href="http://vladimir-vg.github.io/"/>
  <updated>2014-10-20T21:26:18+03:00</updated>
  <id>http://vladimir-vg.github.io/</id>
  <author>
    <name><![CDATA[Gordeev Vladimir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Каким должен быть современный браузерный язык]]></title>
    <link href="http://vladimir-vg.github.io/blog/2012/07/02/modern-browser-language/"/>
    <updated>2012-07-02T21:38:00+03:00</updated>
    <id>http://vladimir-vg.github.io/blog/2012/07/02/modern-browser-language</id>
    <content type="html"><![CDATA[<h2 id="javascript">Или что меня не устраивает в JavaScript</h2>

<p>На самом деле в JavaScript много разных мелких неприятностей которые немного
мешают жить, но в целом это не является весомым поводом для того чтобы его
отринуть. И тем не менее я хочу кое-что пересмотреть. Выпилить нахер eval,
сделать код более строгим, всячески облагородить.</p>

<p>Вполне возможно мною движет <a href="http://lurkmore.to/NIH">NIH-синдром</a>,
однако я попробую доказать что это не так:</p>

<h2 id="section">Модульность</h2>

<p>Браузерный код усложнился достаточно для того чтобы потребовалась
модульная система. <a href="http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition">Вообще-то кое-что уже появилось</a>,
так что этот пункт засчитывается как плюс-минус.</p>

<p>Типичный вебсайт сегодня — пачка jQuery-плагинов повязанных событиями.
Модульная система должна давать возможности для расцвета зоопарка различных
плагинов, а также безопасного из совмещения.
(Лексическая область видимости для каждого модуля,
<a href="http://semver.org/">“умное версионирование”</a>).</p>

<h2 id="section-1">Система типов</h2>

<p>Здесь выбор за <a href="http://c2.com/cgi/wiki?SoftTyping">SoftTyping</a>.</p>

<p>Причина та же что и в предыдущем пункте (сложность): необходимы стандартные средства
для проверки типов. Конечно не стоит устраивать такую содомию как в <a href="http://www.haskell.org/haskellwiki/Haskell">Haskell</a>,
достаточно опциональных аннотаций. (привет <a href="http://www.dartlang.org/">Dart</a>!)</p>

<h2 id="section-2">Простая структура кода</h2>

<p>Неоднозначная фраза, под ней я имел ввиду возможность легко отследить
зависимости в коде. Куча асинхронного кода динамически повязанного с событиями
— дикая лапша. Отлаживать такое — то ещё удовольствие.</p>

<p>Предыдущие два пункта были довольно косвенными, их можно решить без смены языка.
Этот нет.</p>

<p>Язык должен быть более строг что касается событий. Например будет обязывать
описывать все события в одном месте (модуля).</p>

<p>Кроме того желательно код писать чистым и изолированным, чтобы можно было легко
выделить только необходимые части кода, ужать размер.</p>

<p>Поэтому тут выбор за функциональным программированием. Ну и дебажить такое будет
заметно легче. Мне представляется что-то похожее на <a href="http://www.erlang.org/">Erlang</a>. (Без процессов, конечно).</p>

<h1 id="coffeescripthttpcoffeescriptorg--darthttpwwwdartlangorg"><a href="http://coffeescript.org/">CoffeeScript</a> и <a href="http://www.dartlang.org/">Dart</a></h1>

<p>Два языка которые пытаются улучшить JavaScript. Coffee просто предлагает более
приятный для глаз синтаксис, более читаемый. Dart пытается сделать какие-то
более радикальные изменения, хотя мне кажется что всё осталось по старому.
На мой поверхностный взгляд Dart таки предлагает большую структурированность.
(Однако event-hell сохраняется). Короче не то что нужно. Не то что я хочу.</p>

<p>Само собой я не прав.</p>

<p>Как-то так.</p>
]]></content>
  </entry>
  
</feed>
